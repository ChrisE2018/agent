{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\info
{\author Christopher Eliot}
{\*\company Christopher Eliot}
{\*\copyright Copyright \'a9 2017 by Christopher Eliot}}\margl1440\margr1440\vieww17600\viewh17100\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 Design an Agent to Monitor Spring Requests\
* Count Strings allocated\
* Measure total time spent in request\
\
Challenges to solution:\
* Build an agent\
* Determine when a request is being services\
* Count strings and measure time\
\

\b Build an agent
\b0 \
\
Have been thinking about building an agent to identify annotated classes. Set goal to\
build that agent first and learn the technology.\
\
Built the agent and explored the capabilities.\
\
Found that agents are like other reflection technology in Java. Can only identify loaded\
classes, not potentially loadable classes (on the class path).\
\
Found another way involving listing of ClassLoaders and resource URLs to identify\
class files in the class path. This can solve the problem of finding classes, but isn't\
a solution to the original problem.\
\

\b Determine when a request is being services
\b0 \
\
Plan: determine threads. Figure out which threads are servicing requests. Identify the Spring class/methods involved.\
\

\b Count strings and measure time
\b0 \
\
Plan(s): Monitor String allocation method.\
}